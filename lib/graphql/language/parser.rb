#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'



module GraphQL
  module Language
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 217)

def initialize(query_string)
  @query_string = query_string
end

def parse_document
  @document ||= begin
    @tokens ||= GraphQL::Language::Lexer.tokenize(@query_string)
    if @tokens.none?
      make_node(:Document, definitions: [])
    else
      do_parse
    end
  end
end

def self.parse(query_string)
  self.new(query_string).parse_document
end

private

def next_token
  lexer_token = @tokens.shift
  if lexer_token.nil?
    nil
  else
    [lexer_token.name, lexer_token]
  end
end

def on_error(parser_token_id, lexer_token, vstack)
  if lexer_token == "$"
    raise GraphQL::ParseError.new("Unexpected end of document", nil, nil, @query_string)
  else
    parser_token_name = token_to_str(parser_token_id)
    if parser_token_name.nil?
      raise GraphQL::ParseError.new("Parse Error on unknown token: {token_id: #{parser_token_id}, lexer_token: #{lexer_token}} from #{@query_string}", nil, nil, @query_string)
    else
      line, col = lexer_token.line_and_column
      if lexer_token.name == :BAD_UNICODE_ESCAPE
        raise GraphQL::ParseError.new("Parse error on bad Unicode escape sequence: #{lexer_token.to_s.inspect} (#{parser_token_name}) at [#{line}, #{col}]", line, col, @query_string)
      else
        raise GraphQL::ParseError.new("Parse error on #{lexer_token.to_s.inspect} (#{parser_token_name}) at [#{line}, #{col}]", line, col, @query_string)
      end
    end
  end
end

def make_node(node_name, assigns)
  assigns.each do |key, value|
    if key != :position_source && value.is_a?(GraphQL::Language::Token)
      assigns[key] = value.to_s
    end
  end

  GraphQL::Language::Nodes.const_get(node_name).new(assigns)
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    89,   108,    36,    90,   109,    35,    91,   108,    92,   117,
    83,    84,    43,    80,    81,    82,    89,    65,    51,    90,
    73,    36,    91,    43,    92,    47,    83,    84,    77,    80,
    81,    82,    89,    43,    36,    90,     9,     9,    91,    31,
    92,     9,    83,    84,     9,    80,    81,    82,    89,    29,
    43,    90,   111,     9,    91,     9,    92,    43,    83,    84,
    43,    80,    81,    82,    89,   115,    15,    90,   100,    51,
    91,    54,    92,    43,    83,    84,    71,    80,    81,    82,
    10,    19,    12,    13,    14,    10,    19,    12,    13,    14,
    20,    10,    19,    12,    13,    14,    37,    38,    39,    40,
    27,    32,    10,    19,    12,    13,    14,    97,   nil,   nil,
   nil,    27,    10,    19,    12,    13,    14,    97,   nil,   nil,
   nil,   nil,    10,    19,    12,    13,    14,    37,    38,    39,
    40,    45,   nil,   nil,     9,    43,    10,    11,    12,    13,
    14,     9,   nil,    10,    11,    12,    13,    14,   103,    10,
    19,    12,    13,    14,   113,    10,    19,    12,    13,    14,
    10,    19,    12,    13,    14,    10,    19,    12,    13,    14,
    10,    19,    12,    13,    14,    10,    19,    12,    13,    14,
    10,    19,    12,    13,    14,    10,    19,    12,    13,    14,
    10,    19,    12,    13,    14 ]

racc_action_check = [
   115,    95,    26,   115,    95,    26,   115,   110,   115,   110,
   115,   115,    63,   115,   115,   115,   109,    49,    49,   109,
    57,    59,   109,    61,   109,    28,   109,   109,    67,   109,
   109,   109,    73,    70,    53,    73,    75,    76,    73,    17,
    73,    78,    73,    73,    52,    73,    73,    73,   101,    15,
    30,   101,   101,    48,   101,    46,   101,    44,   101,   101,
    41,   101,   101,   101,    90,   106,     1,    90,    90,    31,
    90,    36,    90,    34,    90,    90,    55,    90,    90,    90,
    36,    36,    36,    36,    36,    55,    55,    55,    55,    55,
     9,     9,     9,     9,     9,     9,    47,    47,    47,    47,
     9,    21,    21,    21,    21,    21,    21,    77,   nil,   nil,
   nil,    21,    77,    77,    77,    77,    77,    97,   nil,   nil,
   nil,   nil,    97,    97,    97,    97,    97,    27,    27,    27,
    27,    27,   nil,   nil,     3,    27,     3,     3,     3,     3,
     3,     0,   nil,     0,     0,     0,     0,     0,    91,    91,
    91,    91,    91,    91,   104,   104,   104,   104,   104,   104,
    43,    43,    43,    43,    43,    35,    35,    35,    35,    35,
    89,    89,    89,    89,    89,     7,     7,     7,     7,     7,
    45,    45,    45,    45,    45,    51,    51,    51,    51,    51,
    11,    11,    11,    11,    11 ]

racc_action_pointer = [
   131,    66,   nil,   124,   nil,   nil,   nil,   163,   nil,    79,
   nil,   178,   nil,   nil,   nil,    49,   nil,    37,   nil,   nil,
   nil,    90,   nil,   nil,   nil,   nil,     0,   115,     9,   nil,
    30,    65,   nil,   nil,    53,   153,    68,   nil,   nil,   nil,
   nil,    40,   nil,   148,    37,   168,    45,    84,    43,    14,
   nil,   173,    34,    32,   nil,    73,   nil,    15,   nil,    19,
   nil,     3,   nil,    -8,   nil,   nil,   nil,    23,   nil,   nil,
    13,   nil,   nil,    28,   nil,    26,    27,   100,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   158,
    60,   137,   nil,   nil,   nil,    -5,   nil,   110,   nil,   nil,
   nil,    44,   nil,   nil,   143,   nil,    60,   nil,   nil,    12,
     1,   nil,   nil,   nil,   nil,    -4,   nil,   nil,   nil ]

racc_action_default = [
   -76,   -76,    -1,    -2,    -3,    -5,    -6,    -9,    -8,   -76,
   -32,   -33,   -34,   -35,   -36,   -76,    -4,   -11,   -10,   -33,
   -21,   -76,   -25,   -27,   -28,   -29,   -41,   -67,   -76,   119,
   -67,   -76,   -22,   -26,   -67,   -76,   -76,   -37,   -38,   -39,
   -40,   -68,   -69,   -76,   -67,   -76,   -76,   -76,   -76,   -76,
   -13,   -76,   -23,   -41,   -42,   -76,   -44,   -76,   -70,   -41,
   -72,   -67,   -74,   -67,    -7,   -12,   -14,   -76,   -24,   -30,
   -67,   -43,   -45,   -76,   -71,   -76,   -76,   -76,   -23,   -46,
   -47,   -48,   -49,   -50,   -51,   -52,   -53,   -54,   -55,   -76,
   -76,   -76,   -66,   -73,   -75,   -19,   -16,   -76,   -31,   -56,
   -57,   -76,   -59,   -61,   -76,   -63,   -76,   -15,   -17,   -76,
   -76,   -58,   -60,   -62,   -64,   -76,   -20,   -18,   -65 ]

racc_goto_table = [
    18,    69,    26,    46,    28,    79,    48,    34,    50,    22,
    52,    95,    44,    62,    26,    64,    56,   105,   107,    68,
    60,    33,   102,    21,    49,    30,    66,    98,    53,    57,
   114,   110,    63,   112,    70,    72,    59,    75,    61,    76,
    74,   116,    93,    94,    67,    68,    78,   118,    57,     4,
    17,     1,    16,    55,     3,   101,   104,     2,    58,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    96,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    99,   nil,   106,   nil,   nil,   nil,   nil,   nil,
    96,   nil,   nil,   nil,   nil,   nil,   nil,   106 ]

racc_goto_check = [
     7,    18,     7,    10,     7,    16,    10,    23,    13,    19,
    10,    14,    24,    11,     7,    11,    26,    33,    15,    11,
    10,    19,    16,    17,    12,     9,    13,    18,     7,     7,
    33,    14,    24,    16,    23,    26,     7,    10,     7,    10,
    23,    16,    11,    11,     7,    11,    10,    16,     7,     4,
     8,     1,     4,    25,     3,    31,    32,     2,    35,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,   nil,     7,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,    51,    57,    54,    49,   nil,   nil,    -7,    43,     8,
   -24,   -33,    -7,   -23,   -66,   -77,   -68,    14,   -51,     0,
   nil,   nil,   nil,   -19,   -15,    17,   -20,   nil,   nil,   nil,
   nil,   -35,   -35,   -74,   nil,    17 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     5,     6,     7,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    23,    24,    25,   nil,   nil,   nil,   nil,    85,    86,    87,
    88,   nil,   nil,   nil,    41,    42 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 23, :_reduce_none,
  1, 24, :_reduce_2,
  1, 25, :_reduce_3,
  2, 25, :_reduce_4,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  5, 27, :_reduce_7,
  1, 27, :_reduce_8,
  0, 30, :_reduce_9,
  1, 30, :_reduce_none,
  0, 31, :_reduce_11,
  3, 31, :_reduce_12,
  1, 34, :_reduce_13,
  2, 34, :_reduce_14,
  5, 35, :_reduce_15,
  1, 36, :_reduce_16,
  2, 36, :_reduce_17,
  3, 36, :_reduce_18,
  0, 37, :_reduce_19,
  2, 37, :_reduce_20,
  2, 33, :_reduce_21,
  3, 33, :_reduce_22,
  0, 40, :_reduce_23,
  1, 40, :_reduce_24,
  1, 39, :_reduce_25,
  2, 39, :_reduce_26,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  4, 42, :_reduce_30,
  6, 42, :_reduce_31,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  0, 45, :_reduce_41,
  2, 45, :_reduce_42,
  3, 45, :_reduce_43,
  1, 47, :_reduce_44,
  2, 47, :_reduce_45,
  3, 48, :_reduce_46,
  1, 38, :_reduce_47,
  1, 38, :_reduce_48,
  1, 38, :_reduce_49,
  1, 38, :_reduce_50,
  1, 38, :_reduce_51,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  2, 49, :_reduce_56,
  2, 50, :_reduce_57,
  3, 50, :_reduce_58,
  1, 53, :_reduce_59,
  2, 53, :_reduce_60,
  2, 51, :_reduce_61,
  3, 51, :_reduce_62,
  1, 54, :_reduce_63,
  2, 54, :_reduce_64,
  3, 55, :_reduce_65,
  1, 52, :_reduce_66,
  0, 32, :_reduce_67,
  1, 32, :_reduce_none,
  1, 56, :_reduce_69,
  2, 56, :_reduce_70,
  3, 57, :_reduce_71,
  3, 43, :_reduce_72,
  5, 44, :_reduce_73,
  3, 44, :_reduce_74,
  6, 28, :_reduce_75 ]

racc_reduce_n = 76

racc_shift_n = 119

racc_token_table = {
  false => 0,
  :error => 1,
  :RPAREN => 2,
  :LPAREN => 3,
  :VAR_SIGN => 4,
  :COLON => 5,
  :BANG => 6,
  :RBRACKET => 7,
  :LBRACKET => 8,
  :EQUALS => 9,
  :RCURLY => 10,
  :LCURLY => 11,
  :IDENTIFIER => 12,
  :FRAGMENT => 13,
  :TRUE => 14,
  :FALSE => 15,
  :ON => 16,
  :FLOAT => 17,
  :INT => 18,
  :STRING => 19,
  :DIR_SIGN => 20,
  :ELLIPSIS => 21 }

racc_nt_base = 22

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "RPAREN",
  "LPAREN",
  "VAR_SIGN",
  "COLON",
  "BANG",
  "RBRACKET",
  "LBRACKET",
  "EQUALS",
  "RCURLY",
  "LCURLY",
  "IDENTIFIER",
  "FRAGMENT",
  "TRUE",
  "FALSE",
  "ON",
  "FLOAT",
  "INT",
  "STRING",
  "DIR_SIGN",
  "ELLIPSIS",
  "$start",
  "target",
  "document",
  "definitions_list",
  "definition",
  "operation_definition",
  "fragment_definition",
  "name",
  "operation_name_opt",
  "variable_definitions_opt",
  "directives_list_opt",
  "selection_set",
  "variable_definitions_list",
  "variable_definition",
  "variable_definition_type_name",
  "variable_definition_default_value_opt",
  "input_value",
  "selection_list",
  "selection_set_opt",
  "selection",
  "field",
  "fragment_spread",
  "inline_fragment",
  "arguments_opt",
  "name_without_on",
  "arguments_list",
  "argument",
  "variable",
  "list_value",
  "object_value",
  "enum_value",
  "list_value_list",
  "object_value_list",
  "object_value_field",
  "directives_list",
  "directive" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 4)
  def _reduce_2(val, _values, result)
     return make_node(:Document, definitions: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_3(val, _values, result)
     return [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_4(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_7(val, _values, result)
            return  make_node(
          :OperationDefinition, {
            operation_type: val[0],
            name:           val[1],
            variables:      val[2],
            directives:     val[3],
            selections:     val[4],
            position_source: val[0],
          }
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_8(val, _values, result)
            return make_node(
          :OperationDefinition, {
            operation_type: "query",
            selections: val[0],
          }
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_9(val, _values, result)
     return nil 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_11(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 42)
  def _reduce_12(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_13(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_14(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_15(val, _values, result)
            return make_node(:VariableDefinition, {
          name: val[1],
          type: val[3],
          default_value: val[4],
          position_source: val[0],
        })
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_16(val, _values, result)
     return make_node(:TypeName, name: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_17(val, _values, result)
     return make_node(:NonNullType, of_type: val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_18(val, _values, result)
     return make_node(:ListType, of_type: val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_19(val, _values, result)
     return nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_20(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_21(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_22(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_23(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_24(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_25(val, _values, result)
     return [result] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_26(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_30(val, _values, result)
                return make_node(
              :Field, {
                name:         val[0],
                arguments:    val[1],
                directives:   val[2],
                selections:   val[3],
                position_source: val[0],
              }
            )
          
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_31(val, _values, result)
                return make_node(
              :Field, {
                alias:        val[0],
                name:         val[2],
                arguments:    val[3],
                directives:   val[4],
                selections:   val[5],
                position_source: val[0],
              }
            )
          
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_41(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_42(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_43(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_44(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_45(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_46(val, _values, result)
     return make_node(:Argument, name: val[0], value: val[2], position_source: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_47(val, _values, result)
     return val[0].to_f 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_48(val, _values, result)
     return val[0].to_i 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_49(val, _values, result)
     return val[0].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_50(val, _values, result)
     return true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_51(val, _values, result)
     return false 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_56(val, _values, result)
     return make_node(:VariableIdentifier, name: val[1], position_source: val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_57(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_58(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_59(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_60(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_61(val, _values, result)
     return make_node(:InputObject, arguments: [], position_source: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_62(val, _values, result)
     return make_node(:InputObject, arguments: val[1], position_source: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_63(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_64(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_65(val, _values, result)
     return make_node(:Argument, name: val[0], value: val[2], position_source: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_66(val, _values, result)
     return make_node(:Enum, name: val[0], position_source: val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 169)
  def _reduce_67(val, _values, result)
     return [] 
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_69(val, _values, result)
     return [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_70(val, _values, result)
     val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_71(val, _values, result)
     return make_node(:Directive, name: val[1], arguments: val[2], position_source: val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 179)
  def _reduce_72(val, _values, result)
     return make_node(:FragmentSpread, name: val[1], directives: val[2], position_source: val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_73(val, _values, result)
            return make_node(:InlineFragment, {
          type: val[2],
          directives: val[3],
          selections: val[4],
          position_source: val[0]
        })
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 191)
  def _reduce_74(val, _values, result)
            return make_node(:InlineFragment, {
          type: nil,
          directives: val[1],
          selections: val[2],
          position_source: val[0]
        })
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_75(val, _values, result)
          return make_node(:FragmentDefinition, {
          name:       val[1],
          type:       val[3],
          directives: val[4],
          selections: val[5],
          position_source: val[0],
        }
      )
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module Language
  end   # module GraphQL
